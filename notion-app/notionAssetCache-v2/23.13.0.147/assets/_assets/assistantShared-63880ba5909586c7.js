"use strict";(self.webpackChunknotion_next=self.webpackChunknotion_next||[]).push([[336],{189:(e,t,r)=>{r.d(t,{LV:()=>b,Tc:()=>h,oU:()=>m,yM:()=>y});r(21703),r(57658);var n=r(67266),i=r.n(n),a=r(53965),o=r(40470),s=r(1898),u=r(18265),p=r(64572),c=r(22828);function l(e){if(!(32===e.length&&/^[a-f0-9]*$/g.test(e)))return;return[e.substring(0,8),e.substring(8,12),e.substring(12,16),e.substring(16,20),e.substring(20,32)].join("-")}const d=/^\d+$/,m=(0,s.AO)((e=>d.test(e)?{true:e}:{false:e})),y=(0,s.AO)((e=>d.test(e)?{false:e}:{true:e}));(0,s.AO)((e=>"block"===e.type?{true:e}:{false:e}));class b extends Error{constructor(e){super(`Tried to map invalid id: ${e}`)}}class h{generateSerializedKey(e){return i()(e)}constructor(e){if(this.counter=0,this.keyToCounterMap=new Map,this.counterToKeyMap=new Map,this.mapCounterToKeyInModeOrThrow=(e,t)=>o.x.unwrap(this.mapCounterToKeyInMode(e,t)),this.mapCounterToKeyInMode=(e,t)=>h.mapCounterToKeyInMode(this,e,t),this.utilitiesForTests={removeKey:this.removeKey.bind(this),setCounterValueForKey:this.setCounterValueForKey.bind(this)},e){const t=[];for(const{key:n,counter:i}of e.keyMap)this.keyToCounterMap.set(this.generateSerializedKey(n),i),this.counterToKeyMap.set(i,n),t.push(parseInt(i));const r=a.Fp(t);this.counter="number"==typeof r?r+1:0}}serialize(){return{keyMap:Array.from(this.counterToKeyMap.entries()).map((e=>{let[t,r]=e;return{key:a.Xh(r),counter:t}}))}}inheritFrom(e){for(const[t,r]of e.keyToCounterMap.entries())this.keyToCounterMap.set(t,r);for(const[t,r]of e.counterToKeyMap.entries())this.counterToKeyMap.set(t,r)}mapKeyToCounter(e){const t=this.generateSerializedKey(e);if(!this.keyToCounterMap.has(t)){const r=this.counter.toString();this.keyToCounterMap.set(t,r),this.counterToKeyMap.set(r,e),this.counter++}return this.keyToCounterMap.get(t)}mapNodeKeyToCounter(e){if("block"===e.type){const t={...e},r=this.mapNodeAttributesKeyToCounter(e.attributes);t.attributes=r;const n=e.text.map((e=>this.mapNodeKeyToCounter(e)));t.text=n;const i=e.children.map((e=>{const r=this.mapNodeKeyToCounter(e);return r.parent=t,r}));t.children=i;const a={};for(const[e,u]of Object.entries(t.properties))a[e]=this.mapNodeKeyToCounter(u);t.properties=a;const o={};for(const[e,u]of Object.entries(t.schemas))o[e]=this.mapNodeKeyToCounter(u);t.schemas=o;const s=this.mapKeyToCounter({key:e.schemaId,type:"block"});return t.schemaId=s,t}if("property"===e.type||"schema"===e.type||"inline"===e.type){const t={...e};return t.attributes=this.mapNodeAttributesKeyToCounter(t.attributes),t.children=t.children.map((e=>this.mapNodeKeyToCounter(e))),t}if("instructions"===e.type){const t={...e};return t.children=t.children.map((e=>this.mapNodeKeyToCounter(e))),t}if("text"===e.type)return{...e};if("collection"===e.type){const t={...e,schemaId:this.mapKeyToCounter({type:"block",key:e.schemaId}),attributes:{...e.attributes,id:this.mapKeyToCounter({type:"collection",key:e.attributes.id})}},r=Object.fromEntries(Object.entries(t.schemas).map((e=>{let[t,r]=e;return[t,this.mapNodeKeyToCounter(r)]})));return t.schemas=r,t}if("collectionView"===e.type)return{...e,schemaId:this.mapKeyToCounter({type:"block",key:e.schemaId}),attributes:{...e.attributes,id:this.mapKeyToCounter({type:"collection-view",key:e.attributes.id}),"database-id":this.mapKeyToCounter({type:"collection",key:e.attributes["database-id"]})}};throw new Error(`Unknown node type ${e}`)}mapNodeAttributesKeyToCounter(e){if(!e)return e;const t={...e};for(const[r,n]of Object.entries(h.attributesToMap)){if(!n)continue;const e=t[r];if(e)if("href"===r){let n;const i=u.Qc(e),a=u.Nm({str:i.href,allowNoProtocol:!0});a&&(n=(0,p.A5)({url:a,baseUrl:i.protocol?`${i.protocol}//${i.host}`:`https://${i.host??"www.notion.so"}`,publicDomainName:i.host??"www.notion.so"})),t[r]=n?this.mapKeyToCounter({type:"block",key:n}):e}else t[r]="person-id"===r?this.mapKeyToCounter({type:"person",key:e}):"database-id"===r?this.mapKeyToCounter({type:"collection",key:e}):this.mapKeyToCounter({type:"block",key:e})}return t}doesIdMapperContainMappedKey(e){return this.counterToKeyMap.has(e)}doesIdMapperContainKey(e){return this.keyToCounterMap.has(this.generateSerializedKey(e))}mapCounterToKey(e){const t=this.counterToKeyMap.get(e);if(!t)throw new b(e);return t}mapAssistantContextCounterToKey(e){const{"instructions-page-id":t,"current-page-id":r,"current-person-id":n,...i}=e;return{...i,...e["instructions-page-id"]?{"instructions-page-id":this.mapCounterToKeyInModeOrThrow(e["instructions-page-id"],"block_counter")}:{},...e["current-page-id"]?{"current-page-id":this.mapCounterToKeyInModeOrThrow(e["current-page-id"],"block_counter")}:{},...e["current-thread-id"]?{"current-thread-id":this.mapCounterToKeyInModeOrThrow(e["current-thread-id"],"thread_counter")}:{},...e["current-person-id"]?{"current-person-id":this.mapCounterToKeyInModeOrThrow(e["current-person-id"],"person_counter")}:{},...e["automation-context"]?{"automation-context":a.Q8(e["automation-context"],(e=>"block-id"===e.type?{type:"block-id","block-id":this.mapCounterToKeyInModeOrThrow(e["block-id"],"block_counter")}:"person-id"===e.type?{type:"person-id","person-id":this.mapCounterToKeyInModeOrThrow(e["person-id"],"person_counter")}:"value"===e.type?e:void(0,s.t1)(e)))}:{}}}mapAssistantContextKeyToCounter(e){const{"instructions-page-id":t,"current-page-id":r,"current-person-id":n,...i}=e;return{...i,...e["instructions-page-id"]?{"instructions-page-id":this.mapKeyToCounter({type:"block",key:e["instructions-page-id"]})}:{},...e["current-page-id"]?{"current-page-id":this.mapKeyToCounter({type:"block",key:e["current-page-id"]})}:{},...e["current-thread-id"]?{"current-thread-id":this.mapKeyToCounter({type:"slack-thread",key:e["current-thread-id"]})}:{},...e["current-person-id"]?{"current-person-id":this.mapKeyToCounter({type:"person",key:e["current-person-id"]})}:{},...e["automation-context"]?{"automation-context":a.Q8(e["automation-context"],(e=>"block-id"===e.type?{type:"block-id","block-id":this.mapKeyToCounter({type:"block",key:e["block-id"]})}:"person-id"===e.type?{type:"person-id","person-id":this.mapKeyToCounter({type:"person",key:e["person-id"]})}:"value"===e.type?e:void(0,s.t1)(e)))}:{}}}mapAssistantSelectionKeyToCounter(e){return"block"===e.type?{type:"block",blockIds:e.blockIds.map((e=>this.mapKeyToCounter({type:"block",key:e})))}:"text"===e.type?{type:"text",start:{...e.start,blockId:this.mapKeyToCounter({type:"block",key:e.start.blockId})},end:{...e.end,blockId:this.mapKeyToCounter({type:"block",key:e.end.blockId})}}:void(0,s.t1)(e)}static mapCounterToKeyInMode(e,t,r){if("block_counter"===r||"person_counter"===r||"thread_counter"===r||"collection_counter"===r||"collection_view_counter"===r||"query_database_result_counter"===r){const n=o.x.catchErrors((()=>e.mapCounterToKey(t)));if(o.x.isFail(n))return n;const i=n.value;let a;return"block_counter"===r?a="block":"person_counter"===r?a="person":"thread_counter"===r?a="slack-thread":"collection_counter"===r?a="collection":"collection_view_counter"===r?a="collection-view":"query_database_result_counter"===r?a="query-database-result":(0,s.t1)(r),i.type!==a?{error:new c._N({receivedIdType:i.type,expectedIdType:a})}:{value:i.key}}if("href_counter"===r){const r=h.getMappedTypeFromCounterIfExists(t,e);return"query-database-result"===r?{error:new c._N({receivedIdType:r,expectedIdType:"href"})}:{value:h.mapHrefCounterToUrl(e,t)}}(0,s.t1)(r)}static getMappedTypeFromCounterIfExists(e,t){let r;try{r=t.mapCounterToKey(e)}catch(n){if(n instanceof b)return;throw n}return r.type}static blockKeyToHref(e){return`/${e.key.split("/")[0].replaceAll("-","")}`}static blockIdToHref(e){return`/${e.split("/")[0].replaceAll("-","")}`}static parseAssistantHref(e){if(e===h.EMPTY_HREF)return{type:"citation_unsupported"};if(function(e){return e.startsWith("query_database_result_counter://")}(e)){const t=h.databaseQueryHrefToDatabaseQueryResultsId(e);if(t)return{type:"database_query_results",id:t}}else if(function(e){return e.startsWith("slack://")}(e)){const t=function(e){try{const t=new URL(e),r=t.searchParams.get("domain"),n=t.searchParams.get("channel_id"),i=t.searchParams.get("message_id"),a=t.searchParams.get("thread_ts")||void 0;if(!r||!n||!i)return;return{domain:r,channelId:n,messageId:i,threadTs:a}}catch(t){return}}(e);if(t)return{type:"slack",...t}}else{var t;const r=null===(t=e.match(/\/(.+)/))||void 0===t?void 0:t[1];if(r)return{type:"block",blockId:l(r)}}}static databaseQueryHrefToDatabaseQueryResultsId(e){var t;const r=null===(t=e.match(/^query_database_result_counter:\/\/(.+)$/))||void 0===t?void 0:t[1];return r&&l(r)}static mapHrefCounterToUrl(e,t){let r;try{r=e.mapCounterToKey(t)}catch(n){if(n instanceof b)return t;throw n}if("block"===r.type)return h.blockKeyToHref(r);if("url"===r.type||"slack-message"===r.type||"slack-thread"===r.type)return r.key;if("collection"===r.type||"person"===r.type)return h.EMPTY_HREF;if("collection-view"===r.type||"query-database-result"===r.type||"skill"===r.type)throw new Error(`Invalid URL type: ${r.type}`);(0,s.t1)(r)}removeKey(e){const t=this.generateSerializedKey(e),r=this.keyToCounterMap.get(t);if(r)return this.keyToCounterMap.delete(t),this.counterToKeyMap.delete(r),r}setCounterValueForKey(e,t){const r=this.generateSerializedKey(e);this.keyToCounterMap.set(r,t),this.counterToKeyMap.set(t,e)}}h.attributesToMap={id:!0,"page-id":!0,"database-id":!0,"person-id":!0,"person-name":!1,href:!0,language:!1,category:!1,option:!1,format:!1,number:!1,date:!1,time:!1,"start-date":!1,"start-time":!1,"end-date":!1,"end-time":!1,"synced-property-name":!1,"synced-block-id":!0},h.EMPTY_HREF="#"},23945:(e,t,r)=>{r.r(t),r.d(t,{parseQueryDatabaseObservation:()=>i.qC,parseSimpleXML:()=>n.P,runParser:()=>a.w6});var n=r(39040),i=r(24158),a=r(80)},22828:(e,t,r)=>{r.d(t,{B9:()=>l,DY:()=>b,Db:()=>T,Dt:()=>c,EH:()=>M,EO:()=>v,FI:()=>s,Ii:()=>_,JZ:()=>o,MX:()=>i,O7:()=>k,OX:()=>f,SF:()=>q,WH:()=>m,XV:()=>a,_N:()=>y,d4:()=>p,eL:()=>u,en:()=>C,fr:()=>h,kj:()=>g,qf:()=>x,uY:()=>w,vQ:()=>d,wh:()=>N});r(21703);var n=r(1898);class i extends Error{constructor(e,t,r){super(t),this.type=e,this.cause=r}}class a extends i{}class o extends a{constructor(e){let t=1===e.attributeNames.length?`Unexpected attribute for <${e.tagName}> tag: ${e.attributeNames[0]}`:`Unexpected attributes for <${e.tagName}> tag: ${e.attributeNames.join(", ")}`;e.attributeNames.includes("key")&&(t+="\n\nThe key attribute is not needed. You should omit it."),super("unexpected_attributes",t)}}class s extends a{constructor(e){super("missing_attribute",`The <${e.tagName}> tag is missing a ${e.attributeName} attribute. It should be specified as <${e.tagName} ${e.attributeName}="...">`)}}class u extends a{constructor(e){super("bad_attribute",`Attempted to set attribute ${e.attributeName} on a <${e.tagName}> tag to a value that is not allowed: ${e.receivedValue}`)}}class p extends a{constructor(e){const{tagName:t,unexpectedNode:r}=e;let n;n=r?"text"===r.type?`Plain text, whitespace, or newlines are not allowed inside a <${t}> tag`:`A <${r.tagName}> tag is not allowed inside a <${t}> tag`:`Encountered an invalid child inside a <${t}> tag.`,"set-title"===t||"set-property"===t?n+=`\nOnly inline elements and text are allowed inside <${t}>`:"insert-before"!==t&&"insert-after"!==t&&"insert-inside"!==t&&"chat"!==t||(n+=`\nOnly block elements are allowed inside <${t}>`),super("disallowed_child",n),this.tagName=void 0,this.unexpectedNode=void 0,this.tagName=t,this.unexpectedNode=r}}class c extends a{constructor(e){const{tagName:t,unexpectedNode:r,conditionName:n,cause:i}=e;super("disallowed_child_in_condition",r?"text"===r.type?`Plain text, whitespace, or newlines are not allowed inside a <${t}> tag with a ${n} condition`:`A <${r.tagName}> tag is not allowed inside a <${t}> tag with a ${n} condition`:`Encountered an invalid child inside a <${t}> tag with a ${n} condition`),this.cause=void 0,this.cause=i}}class l extends a{constructor(e){super("expected_tag_name",`Expected a <${e}> tag`)}}class d extends a{constructor(e){let t;(0,n.$K)(e.unexpectedNode)?"text"===e.unexpectedNode.type?t=`Text is not supported as a child for a ${e.nodeType} node`:"element"===e.unexpectedNode.type?t=`Unsupported ${e.nodeType} tag name: ${e.unexpectedNode.tagName}`:(0,n.t1)(e.unexpectedNode):t=`Unexpected value for a ${e.nodeType} node`,super("unsupported_node",t)}}class m extends a{constructor(e){super("unmapped_id",`Expected counter ID, received ${e}`)}}class y extends a{constructor(e){const{expectedIdType:t,receivedIdType:r}=e;super("unexpected_id_type",`Expected ID of type '${t}', received ID '${r}'`)}}class b extends a{constructor(e){super("out_of_order_node",`Encountered a ${e.foundNodeType} after a ${e.incorrectlyAfterType}. You should ensure that any ${e.foundNodeType}s come before ${e.incorrectlyAfterType}s.`)}}class h extends a{constructor(){super("table_row_property_name","Inside tr, the property-text name attribute must be a string which is an integer counter, starting from 1.")}}class g extends a{constructor(){super("synced_block_invalid_children","Cannot include content when writing a <synced-block-reference> tag")}}class f extends a{constructor(){super("must_provide_id","Block node is missing an id attribute")}}class v extends a{constructor(){super("cannot_provide_id","When creating new blocks, do not provide an id attribute.")}}class x extends a{constructor(){super("cannot_append_to_multiple_properties","Cannot append to multiple properties. Use multiple calls to <insert-inside> instead.")}}class k extends a{constructor(){super("cannot_remove_from_multiple_properties","Cannot remove from multiple properties. Use multiple calls to <delete> instead.")}}class T extends a{constructor(){super("move_disallowed","A <move> tag is not allowed in this context")}}class _ extends a{constructor(){super("set_attribute_without_key","<set-attribute> is missing an attribute to set")}}class q extends a{constructor(){super("set_attribute_too_many_keys","<set-attribute> has too many attributes. You can only set one attribute at a time.")}}class w extends a{constructor(e){super("invalid_query_condition",`<${e.tagName}> condition operator must be ${e.allowedOperators.map((e=>`"${e}"`)).join(" or ")}, not "${e.inputCondition}"`)}}class N extends a{constructor(e){super("children_required",`<${e.tagName}> must have children`)}}class C extends a{constructor(e){super("only_one_child_allowed",`Only one ${e} element is allowed`)}}class M extends a{constructor(e){super("unknown_api",`Unknown API: ${e}`)}}},95940:(e,t,r)=>{r.d(t,{B5:()=>l,CC:()=>x,ST:()=>I,Se:()=>q,WC:()=>b,ZK:()=>m,c8:()=>g,dn:()=>u,eT:()=>s,mI:()=>K,pX:()=>C,t:()=>d,v:()=>M,x:()=>$,yD:()=>p,zh:()=>c});var n=r(67266),i=r.n(n),a=r(7032),o=r(1898);const s={default:"default",gray:"gray",brown:"brown",orange:"orange",yellow:"yellow",teal:"green",blue:"blue",purple:"purple",pink:"pink",red:"red",gray_background:"gray-background",brown_background:"brown-background",orange_background:"orange-background",yellow_background:"yellow-background",teal_background:"green-background",blue_background:"blue-background",purple_background:"purple-background",pink_background:"pink-background",red_background:"red-background"},u=Object.fromEntries(Object.entries(s).map((e=>{let[t,r]=e;return[r,t]}))),p=Object.values(s),c=["mention-page","mention-database","mention-person","mention-assistant","mention-date","mention-datetime","mention-date-range","mention-datetime-range"],l=["b","i","code","s","u","a","h",...c],d={b:{attributes:{},inline:l,text:!0,isToken:!1},i:{attributes:{},inline:l,text:!0,isToken:!1},code:{attributes:{},inline:l,text:!0,isToken:!1},s:{attributes:{},inline:l,text:!0,isToken:!1},u:{attributes:{},inline:l,text:!0,isToken:!1},a:{attributes:{href:{required:!0,values:!0,description:"link URL. Do not link to any URLs that are not already in the current context.",mappingMode:"href_counter"}},inline:l,text:!0,isToken:!1},h:{attributes:{color:{required:!0,values:p,description:"text color"}},inline:l,text:!0,isToken:!1},"mention-page":{attributes:{"page-id":{required:!0,values:!0,description:"ID of page",mappingMode:"block_counter"}},inline:[],text:!0,isToken:!0},"mention-database":{attributes:{"database-id":{required:!0,values:!0,description:"ID of database",mappingMode:"collection_counter"}},inline:[],text:!0,isToken:!0},"mention-person":{attributes:{"person-id":{required:!0,values:!0,description:"ID of person",mappingMode:"person_counter"},"person-name":{required:!1,values:!0,description:"Name of person"}},inline:[],text:!0,isToken:!0},"mention-assistant":{attributes:{},inline:[],text:!0,isToken:!0},"mention-date":{attributes:{date:{required:!0,values:!0,description:"Date in ISO 8601 (YYYY-MM-DD) format"}},inline:[],text:!1,isToken:!1},"mention-datetime":{attributes:{date:{required:!0,values:!0,description:"Date in ISO 8601 (YYYY-MM-DD) format"},time:{required:!0,values:!0,description:"Time in ISO 8601 (HH:MM) format"}},inline:[],text:!1,isToken:!1},"mention-date-range":{attributes:{"start-date":{required:!0,values:!0,description:"Start date in ISO 8601 (YYYY-MM-DD) format"},"end-date":{required:!0,values:!0,description:"End date in ISO 8601 (YYYY-MM-DD) format"}},inline:[],text:!1,isToken:!1},"mention-datetime-range":{attributes:{"start-date":{required:!0,values:!0,description:"Start date in ISO 8601 (YYYY-MM-DD) format"},"end-date":{required:!0,values:!0,description:"End date in ISO 8601 (YYYY-MM-DD) format"},"start-time":{required:!0,values:!0,description:"Start time in ISO 8601 (HH:MM) format"},"end-time":{required:!0,values:!0,description:"End time in ISO 8601 (HH:MM) format"}},inline:[],text:!1,isToken:!1},option:{attributes:{option:{values:!0,description:"Option name",required:!0}},inline:[],text:!1,isToken:!1},"option-category":{attributes:{category:{values:!0,description:"Status category",required:!0}},inline:[],text:!1,isToken:!1},"schema-option":{attributes:{option:{values:!0,description:"Option name",required:!0}},inline:[],text:!1,isToken:!1},"schema-option-category":{attributes:{category:{values:!0,description:"Status category",required:!0}},inline:["schema-option"],text:!1,isToken:!1}},m={"property-title":{text:!0,inline:c,attributes:{}},"property-text":{text:!0,inline:l,attributes:{}},"property-url":{text:!0,inline:[],attributes:{}},"property-email":{text:!0,inline:[],attributes:{}},"property-phone-number":{text:!0,inline:[],attributes:{}},"property-person":{text:!1,inline:["mention-person"],attributes:{}},"property-date":{text:!1,inline:["mention-date","mention-date-range","mention-datetime","mention-datetime-range"],attributes:{}},"property-created-time":{text:!1,inline:["mention-date","mention-datetime"],attributes:{}},"property-last-edited-time":{text:!1,inline:["mention-date","mention-datetime"],attributes:{}},"property-created-by":{text:!1,inline:["mention-person"],attributes:{}},"property-last-edited-by":{text:!1,inline:["mention-person"],attributes:{}},"property-checkbox":{text:!1,inline:[],attributes:{checked:{values:["true","false"],description:'checked state, either "true" or "false"',required:!0}}},"property-select":{text:!1,inline:["option"],attributes:{}},"property-multi-select":{text:!1,inline:["option"],attributes:{}},"property-relation":{text:!1,inline:["mention-page"],attributes:{"database-id":{values:!0,description:"The database ID the relation points to",required:!1,mappingMode:"collection_counter"}}},"property-status":{text:!1,inline:["option"],attributes:{}},"property-number":{text:!1,inline:[],attributes:{number:{values:!0,description:"value",required:!1}}}},y=(0,o.Yd)(m),b={"schema-property-title":{propertyTagName:"property-title",inline:[],attributes:{}},"schema-property-text":{propertyTagName:"property-text",inline:[],attributes:{}},"schema-property-url":{propertyTagName:"property-url",inline:[],attributes:{}},"schema-property-email":{propertyTagName:"property-email",inline:[],attributes:{}},"schema-property-phone-number":{propertyTagName:"property-phone-number",inline:[],attributes:{}},"schema-property-person":{propertyTagName:"property-person",inline:[],attributes:{limit:{values:["1","Infinity"],description:"The number of options that can be added",required:!0}}},"schema-property-date":{propertyTagName:"property-date",inline:[],attributes:{}},"schema-property-created-time":{propertyTagName:"property-created-time",inline:[],attributes:{}},"schema-property-last-edited-time":{propertyTagName:"property-last-edited-time",inline:[],attributes:{}},"schema-property-created-by":{propertyTagName:"property-created-by",inline:[],attributes:{}},"schema-property-last-edited-by":{propertyTagName:"property-last-edited-by",inline:[],attributes:{}},"schema-property-checkbox":{propertyTagName:"property-checkbox",inline:[],attributes:{}},"schema-property-select":{propertyTagName:"property-select",inline:["schema-option"],attributes:{}},"schema-property-multi-select":{propertyTagName:"property-multi-select",inline:["schema-option"],attributes:{}},"schema-property-relation":{propertyTagName:"property-relation",inline:["mention-page"],attributes:{limit:{values:["1","Infinity"],description:"The number of options that can be added",required:!0},"database-id":{values:!0,description:"The database ID the relation points to",required:!0,mappingMode:"collection_counter"},"synced-property-name":{required:!1,values:!0,description:"The symmetric relation property name in the database this relation points to"}}},"schema-property-status":{propertyTagName:"property-status",inline:["schema-option-category"],attributes:{}},"schema-property-number":{propertyTagName:"property-number",inline:[],attributes:{format:{values:!0,description:"Number format",required:!1}}}},h={is:{text:!1,inline:["mention-date"],attributes:{}},">":{text:!1,inline:["mention-date"],attributes:{}},"<":{text:!1,inline:["mention-date"],attributes:{}},"≥":{text:!1,inline:["mention-date"],attributes:{}},"≤":{text:!1,inline:["mention-date"],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},g={"property-title":{is:{text:!0,inline:[],attributes:{}},contains:{text:!0,inline:[],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-text":{is:{text:!0,inline:[],attributes:{}},contains:{text:!0,inline:[],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-url":{is:{text:!0,inline:[],attributes:{}},contains:{text:!0,inline:[],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-email":{is:{text:!0,inline:[],attributes:{}},contains:{text:!0,inline:[],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-phone-number":{is:{text:!0,inline:[],attributes:{}},contains:{text:!0,inline:[],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-person":{contains:{text:!1,inline:["mention-person"],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-date":h,"property-created-time":h,"property-last-edited-time":h,"property-created-by":{contains:{text:!1,inline:["mention-person"],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-last-edited-by":{contains:{text:!1,inline:["mention-person"],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-checkbox":{is:{text:!1,inline:[],attributes:{checked:{values:["true","false"],description:'checked state, either "true" or "false"',required:!0}}}},"property-select":{is:{text:!1,inline:["option"],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-multi-select":{contains:{text:!1,inline:["option"],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-relation":{contains:{text:!1,inline:["mention-page"],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-status":{is:{text:!1,inline:["option","option-category"],attributes:{}},"is empty":{text:!1,inline:[],attributes:{}}},"property-number":{is:{text:!1,inline:[],attributes:{number:{values:!0,description:"value",required:!0}}},">":{text:!1,inline:[],attributes:{number:{values:!0,description:"value",required:!0}}},"<":{text:!1,inline:[],attributes:{number:{values:!0,description:"value",required:!0}}},"≥":{text:!1,inline:[],attributes:{number:{values:!0,description:"value",required:!0}}},"≤":{text:!1,inline:[],attributes:{number:{values:!0,description:"value",required:!0}}},"is empty":{text:!1,inline:[],attributes:{}}}},f=["Count all"],v=["Count values","Count unique values","Count empty","Count not empty","Percent empty","Percent not empty","Show unique values"],x={"Count all":"count","Count values":"count_values","Count unique values":"unique","Count empty":"empty","Count not empty":"not_empty","Percent empty":"percent_empty","Percent not empty":"percent_not_empty","Show unique values":"show_unique","Count checked":"checked","Count unchecked":"unchecked","Percent checked":"percent_checked","Percent unchecked":"percent_unchecked","Count per group":"count_per_group","Percent per group":"percent_per_group",Sum:"sum",Average:"average",Median:"median",Min:"min",Max:"max",Range:"range","Earliest date":"earliest_date","Latest date":"latest_date","Date range":"date_range"},k={basic:[...f,...v],date:[...f,...v,"Earliest date","Latest date","Date range"],status:[...f,...v,"Count per group","Percent per group"],number:[...f,...v,"Sum","Average","Median","Min","Max","Range"],checkbox:[...f,"Count checked","Count unchecked","Percent checked","Percent unchecked"]};function T(e){return`the name of the ${e} property being aggregated`}function _(e){return`the method of aggregation for the ${e} property`}const q={"aggregation-property-title":{attributes:{name:{required:!0,values:!0,description:T("title")},aggregation:{values:k.basic,required:!0,description:_("title")}}},"aggregation-property-text":{attributes:{name:{required:!0,values:!0,description:T("text")},aggregation:{values:k.basic,required:!0,description:_("text")}}},"aggregation-property-url":{attributes:{name:{required:!0,values:!0,description:T("url")},aggregation:{values:k.basic,required:!0,description:_("url")}}},"aggregation-property-email":{attributes:{name:{required:!0,values:!0,description:T("email")},aggregation:{values:k.basic,required:!0,description:_("email")}}},"aggregation-property-phone-number":{attributes:{name:{required:!0,values:!0,description:T("phone_number")},aggregation:{values:k.basic,required:!0,description:_("phone_number")}}},"aggregation-property-date":{attributes:{name:{values:!0,required:!0,description:T("date")},aggregation:{values:k.date,required:!0,description:_("date")}}},"aggregation-property-created-time":{attributes:{name:{values:!0,required:!0,description:T("created-time")},aggregation:{values:k.date,required:!0,description:_("created-time")}}},"aggregation-property-last-edited-time":{attributes:{name:{values:!0,required:!0,description:T("last-edited-time")},aggregation:{values:k.date,required:!0,description:_("last-edited-time")}}},"aggregation-property-person":{attributes:{name:{values:!0,required:!0,description:T("person")},aggregation:{values:k.basic,required:!0,description:_("person")}}},"aggregation-property-created-by":{attributes:{name:{values:!0,required:!0,description:T("created-by")},aggregation:{values:k.basic,required:!0,description:_("created-by")}}},"aggregation-property-last-edited-by":{attributes:{name:{values:!0,required:!0,description:T("last-edited-by")},aggregation:{values:k.basic,required:!0,description:_("last-edited-by")}}},"aggregation-property-checkbox":{attributes:{name:{values:!0,required:!0,description:T("checkbox")},aggregation:{values:k.checkbox,required:!0,description:_("checkbox")}}},"aggregation-property-select":{attributes:{name:{values:!0,required:!0,description:T("select")},aggregation:{values:k.basic,required:!0,description:_("select")}}},"aggregation-property-multi-select":{attributes:{name:{values:!0,required:!0,description:T("multi-select")},aggregation:{values:k.basic,required:!0,description:_("multi-select")}}},"aggregation-property-relation":{attributes:{name:{values:!0,required:!0,description:T("relation")},aggregation:{values:k.basic,required:!0,description:_("relation")}}},"aggregation-property-number":{attributes:{name:{values:!0,required:!0,description:T("number")},aggregation:{values:k.number,required:!0,description:_("number")}}},"aggregation-property-status":{attributes:{name:{values:!0,required:!0,description:T("status")},aggregation:{values:k.status,required:!0,description:_("status")},group:{values:!0,required:!0,description:"then name of the status group being aggregated when aggregation is 'Count per group' or 'Percent per group'. For other aggregations, just provide any group name."}}}},w=["hr","embed","h1","h2","h3","database","math-block","code-block","child-page","link-page","child-database","link-database","database-views","text","page","synced-block","synced-block-reference","uli","oli","toggle","quote","callout","todo","columns","table"],N={required:!1,values:p,description:"color for the block"},C={hr:{title:!1,content:[],attributes:{},properties:[],schemas:[]},embed:{title:!1,content:[],attributes:{color:N},properties:[],schemas:[]},h1:{title:!0,content:[],attributes:{color:N},properties:[],schemas:[]},h2:{title:!0,content:[],attributes:{color:N},properties:[],schemas:[]},h3:{title:!0,content:[],attributes:{color:N},properties:[],schemas:[]},database:{title:!1,content:[],attributes:{},properties:["property-title"],schemas:y},"math-block":{title:!0,content:[],attributes:{},properties:[],schemas:[]},"code-block":{title:!0,content:[],attributes:{language:{required:!0,values:!0,description:"language of code"}},properties:[],schemas:[]},"child-page":{title:!1,content:[],attributes:{"page-id":{required:!0,values:!0,description:"ID of page, to be used in <load-page>",mappingMode:"block_counter"},"database-id":{required:!1,values:!0,description:"The ID of the database this page is within, if there is one",mappingMode:"collection_counter"}},properties:y,schemas:[]},"link-page":{title:!1,content:[],attributes:{"page-id":{required:!0,values:!0,description:"ID of page, to be used in <load-page>",mappingMode:"block_counter"},"database-id":{required:!1,values:!0,description:"The ID of the database this page is within, if there is one",mappingMode:"collection_counter"}},properties:y,schemas:[]},"child-database":{title:!1,content:[],attributes:{"database-id":{required:!0,values:!0,description:"ID of database. Make sure to use the value of this attribute as the id in query-database.",mappingMode:"block_counter"}},properties:["property-title"],schemas:y},"database-views":{title:!1,content:[],attributes:{},properties:["property-title"],schemas:y},"link-database":{title:!1,content:[],attributes:{"database-id":{required:!0,values:!0,description:"ID of database",mappingMode:"collection_counter"}},properties:["property-title"],schemas:y},text:{title:!0,content:w,attributes:{color:N},properties:[],schemas:[]},page:{title:!1,content:w,attributes:{"database-id":{required:!1,values:!0,description:"ID of the database this page belongs to. Use this to look up the schema for the page",mappingMode:"collection_counter"}},properties:y,schemas:[]},uli:{title:!0,content:w,attributes:{color:N},properties:[],schemas:[]},oli:{title:!0,content:w,attributes:{color:N},properties:[],schemas:[]},toggle:{title:!0,content:w,attributes:{color:N,size:{required:!1,values:["h1","h2","h3"],description:"size of the toggle header, if the toggle is a header"}},properties:[],schemas:[]},quote:{title:!0,content:w,attributes:{color:N},properties:[],schemas:[]},todo:{title:!0,content:w,attributes:{checked:{required:!0,values:["true","false"],description:'checked state, either "true" or "false"'},color:N},properties:[],schemas:[]},callout:{title:!0,content:w,attributes:{color:N},properties:[],schemas:[]},"synced-block":{title:!1,content:w,attributes:{},properties:[],schemas:[]},"synced-block-reference":{title:!1,content:w,attributes:{"synced-block-id":{required:!0,values:!0,description:"The ID of the <synced-block> node that this references",mappingMode:"block_counter"}},properties:[],schemas:[]},columns:{title:!1,content:["column"],attributes:{},properties:[],schemas:[]},column:{title:!1,content:w,attributes:{},properties:[],schemas:[]},table:{title:!1,content:["tr"],attributes:{"header-row":{required:!1,values:["true","false"],description:'whether first <tr> is row header, either "true" or "false"'},"header-column":{required:!1,values:["true","false"],description:'whether first <td> in every <tr> is column header, either "true" or "false"'}},properties:[],schemas:["property-text"]},tr:{title:!1,content:[],attributes:{},properties:["property-text"],schemas:[]},"ai-block":{title:!0,content:w,attributes:{},properties:["property-text"],schemas:[]}},M=Object.freeze((0,o.Yd)({text:!0,toggle:!0,quote:!0,embed:!0,callout:!0,uli:!0,oli:!0,todo:!0,h1:!0,h2:!0,h3:!0}));function K(e){return(0,a.Ul)(i()(e))}const I=(0,o.AO)((e=>"collectionView"===e.type?{true:e}:{false:e}));(0,o.AO)((e=>"block"===e.type?{true:e}:{false:e}));const $=(0,o.AO)((e=>"synced-block-reference"===e||"ai-block"===e||"database-views"===e?{true:e}:{false:e}))},39040:(e,t,r)=>{r.d(t,{P:()=>i});var n=r(90698);function i(e){return(0,n.parse)(e).childNodes.map(a)}function a(e){return e.nodeType===n.NodeType.TEXT_NODE?{type:"text",value:e.textContent}:{type:"element",tagName:e.tagName.toLowerCase(),attributes:e.attributes||{},children:e.childNodes.map(a)||[]}}},90629:(e,t,r)=>{r.d(t,{I8:()=>l});r(57658),r(21703),r(53965);var n=r(40470),i=r(1898),a=r(80),o=r(22828),s=r(95940),u=r(84112);const p=a.p.map(u.oT,(e=>({type:"text",value:e.value})));function c(e){const t=(0,i.Xc)(s.t,((t,r)=>function(e,t){const r=s.t[e],{mapCounterToKey:i}=t;return a.p.mapResult((0,u.hc)(e),(t=>{const o=(0,u.jg)({inputAttributes:t.attributes,definitions:r.attributes,tagName:e,mapCounterToKey:i});if(n.x.isFail(o))return o;const s=(0,a.w6)(a.p.manyTill(l({inlineNodesAllowed:r.inline,textAllowed:r.text,parentTagName:e,mapCounterToKey:i}),a.p.eof()),t.children??[]);if(n.x.isFail(s))return s;const p=s.value;return{value:{type:"inline",tagName:e,attributes:o.value,children:p}}}))}(r,e)));return t}function l(e){const{inlineNodesAllowed:t,textAllowed:r,parentTagName:n,mapCounterToKey:s}=e,u=[...t],l=[];for(const[a,o]of(0,i.qP)(c({mapCounterToKey:s})))(0,i.DE)(u,a)&&l.push(o);return a.p.choice([...l,...r?[p]:[],a.p.fail((e=>e.length>0?new o.d4({tagName:n,unexpectedNode:e[0]}):new Error("No inline or text node")))])}},24158:(e,t,r)=>{r.d(t,{q9:()=>x,Fs:()=>v,qC:()=>f,w6:()=>k,Qm:()=>T});var n=r(53965),i=r(40470),a=r(80),o=r(22828),s=r(1898),u=r(95940),p=r(90629),c=r(84112);function l(e,t){const r=`filter-${e}`;return a.p.mapResult((0,c.hc)(r),(n=>{var s;if(null===(s=n.attributes)||void 0===s||!s.condition)return{error:new o.FI({tagName:r,attributeName:"condition"})};const l=u.c8[e],d=function(e){const{tagName:t,condition:r,allowedOperators:n}=e;if(r.startsWith("not ")){const e=r.slice(4);return n.includes(e)?{value:{not:!0,operator:e}}:{error:new o.uY({tagName:t,allowedOperators:n,inputCondition:r})}}return n.includes(r)?{value:{not:!1,operator:r}}:{error:new o.uY({tagName:t,allowedOperators:n,inputCondition:r})}}({condition:n.attributes.condition,tagName:r,allowedOperators:Object.keys(l)});if(i.x.isFail(d))return d;const m=l[d.value.operator],y=(0,c.jg)({inputAttributes:n.attributes,definitions:{name:{required:!0,values:!0},condition:{required:!0,values:!0},...m.attributes},tagName:r,mapCounterToKey:t.mapCounterToKey});if(i.x.isFail(y))return y;const{name:b,condition:h,...g}=y.value,f=(0,a.w6)((0,c.Lf)(r,[(0,p.I8)({inlineNodesAllowed:m.inline,textAllowed:m.text,parentTagName:r,mapCounterToKey:t.mapCounterToKey})]),n.children??[]);if(i.x.isFail(f))return f.error instanceof o.d4?{error:new o.Dt({tagName:f.error.tagName,unexpectedNode:f.error.unexpectedNode,conditionName:n.attributes.condition,cause:f.error})}:f;return{value:{propertyName:y.value.name,propertyTagName:e,children:f.value,attributes:g,operator:d.value.operator,not:d.value.not}}}))}function d(e){return a.p.choice([...(0,s.Yd)(u.c8).map((t=>l(t,e))),a.p.fail((e=>new o.vQ({nodeType:"database filter",unexpectedNode:n.Ps(e)})))])}function m(e){return a.p.mapResult((0,c.hc)("filter-group"),(t=>{const r=(0,c.jg)({inputAttributes:t.attributes,definitions:{match:{required:!0,values:["any","all"]}},tagName:"filter-group",mapCounterToKey:e.mapCounterToKey});if(i.x.isFail(r))return r;if(!t.children||0===t.children.length)return{error:new o.wh({tagName:"filter-group"})};const n=(0,a.w6)((0,c.Lf)("filter-group",[d(e)]),t.children??[]);return i.x.isFail(n)?n:{value:{operator:r.value.match,filters:n.value}}}))}function y(e){return a.p.choice([d(e),m(e)])}const b=a.p.choice([...(0,s.Yd)(u.ZK).map((e=>function(e){const t=`sort-${e}`;return a.p.mapResult((0,c.hc)(t),(e=>{const r=(0,c.xB)(e);if(i.x.isFail(r))return r;const n=(0,c.jg)({inputAttributes:e.attributes,definitions:{name:{required:!0,values:!0},direction:{required:!0,values:["ascending","descending"]}},tagName:t,mapCounterToKey:void 0});return i.x.isFail(n)?n:{value:{propertyName:n.value.name,direction:n.value.direction}}}))}(e))),a.p.fail((e=>new o.vQ({nodeType:"database sort",unexpectedNode:n.Ps(e)})))]),h=a.p.map((0,c.MD)({tagName:"search",attributeDefinitions:{question:{required:!0,values:!0},keywords:{required:!0,values:!0},"question-intl":{required:!1,values:!0}},mapCounterToKey:void 0}),(e=>{let{attributes:t}=e;return{question:t.question,keywords:t.keywords,questionIntl:t["question-intl"]}}));const g=a.p.choice([...(0,s.Yd)(u.ZK).map((e=>function(e){const t=`aggregation-${e}`,r=u.Se[t];return a.p.mapResult((0,c.hc)(t),(e=>{const n=(0,c.xB)(e);if(i.x.isFail(n))return n;const a=(0,c.jg)({inputAttributes:e.attributes,definitions:r.attributes,tagName:t,mapCounterToKey:void 0});return i.x.isFail(a)?a:{value:{tagName:t,attributes:a.value}}}))}(e))),a.p.fail((e=>new o.vQ({nodeType:"database sort",unexpectedNode:n.Ps(e)})))]);a.p.map((0,c.MD)({tagName:"limit",attributeDefinitions:{limit:{required:!0,values:!0}},mapCounterToKey:void 0}),(e=>{let{attributes:t}=e;const r=t.limit;if(r){const e=parseInt(r);return isNaN(e)?void 0:e}}));function f(e){return a.p.mapResult((0,c.hc)("query-database"),(t=>{const r=(0,c.jg)({inputAttributes:t.attributes,definitions:{id:{required:!0,values:!0,mappingMode:"collection_counter"}},tagName:"query-database",mapCounterToKey:e.mapCounterToKey});if(i.x.isFail(r))return r;const s=(0,a.w6)((0,c.Lf)("query-database",[a.p.map(y(e),(e=>({type:"filter",value:e}))),a.p.map(b,(e=>({type:"sort",value:e}))),a.p.map(h,(e=>({type:"search",value:e}))),a.p.map(g,(e=>({type:"aggregation",value:e})))]),t.children??[]);if(i.x.isFail(s))return s;const u=s.value.flatMap((e=>"filter"===e.type?[e.value]:[])),p=s.value.flatMap((e=>"sort"===e.type?[e.value]:[])),l=s.value.flatMap((e=>"search"===e.type?[e.value]:[])),d=s.value.flatMap((e=>"aggregation"===e.type?[e.value]:[]));if(l.length>1)return{error:new o.en("<search>")};if(d.length>1)return{error:new o.en("aggregation")};return{value:{tagName:"query-database",type:"observation",query:{databaseId:r.value.id,search:n.Ps(l),aggregation:n.Ps(d),filter:{operator:"all",filters:u},sorts:p,limit:void 0}}}}))}function v(e){return a.p.map((0,c.MD)({tagName:"load-page",attributeDefinitions:{id:{required:!0,values:!0,mappingMode:"block_counter"}},mapCounterToKey:e.mapCounterToKey}),(e=>{let{attributes:t}=e;return{type:"observation",tagName:"load-page",attributes:t}}))}function x(e){return a.p.map((0,c.MD)({tagName:"load-database",attributeDefinitions:{id:{required:!0,values:!0,mappingMode:"collection_counter"}},mapCounterToKey:e.mapCounterToKey}),(e=>{let{attributes:t}=e;return{type:"observation",tagName:"load-database",attributes:t}}))}const k=a.p.map((0,c.MD)({tagName:"search",attributeDefinitions:{question:{required:!0,values:!0},keywords:{required:!0,values:!0},lookback:{required:!1,values:!0},"question-intl":{required:!1,values:!0}},mapCounterToKey:void 0}),(e=>{let{attributes:t}=e;return{type:"observation",tagName:"search",attributes:t}})),T=a.p.map((0,c.MD)({tagName:"search-people",attributeDefinitions:{search:{required:!0,values:!0}},mapCounterToKey:void 0}),(e=>{let{attributes:t}=e;return{type:"observation",tagName:"search-people",attributes:t}}))},84112:(e,t,r)=>{r.d(t,{Lf:()=>b,MD:()=>g,_e:()=>y,hc:()=>c,jg:()=>m,oT:()=>l,xB:()=>h});r(21703),r(57658),r(52262);var n=r(53965),i=r(40470),a=r(1898),o=r(80),s=r(22828),u=r(189);const p=o.p.satisfy((0,a.AO)((e=>"element"===e.type?{true:e}:{false:e})));function c(e){return o.p.describe(o.p.filter(p,(t=>t.tagName===e)),(()=>new s.B9(e)))}const l=o.p.satisfy((0,a.AO)((e=>"text"===e.type?{true:e}:{false:e})));function d(e){const{prefixMappingMode:t,baseHref:r}=e;return"query_database_result_counter"===t?`query_database_result_counter:/${u.Tc.blockIdToHref(r)}`:"href_counter"===t?r:void(0,a.t1)(t)}function m(e){const{inputAttributes:t={},definitions:r,tagName:o,validateRequiredAttributes:p=!0,mapCounterToKey:c}=e,l=Object.keys(t),m=Object.keys(r),y=n.e5(l,m);if(y.length>0)return{error:new s.JZ({attributeNames:y,tagName:o})};if(p)for(const[n,i]of Object.entries(r))if(i.required&&!l.includes(n))return{error:new s.FI({attributeName:n,tagName:o})};const b=n.d9(t);for(const[n,h]of Object.entries(t)){const e=r[n];if((0,a.$K)(e.mappingMode)){if("href_counter"!==e.mappingMode&&!(0,u.oU)(h))return{error:new s.WH(h)};if((0,a.$K)(c)&&"href_counter"===e.mappingMode){let e;const t=["href_counter","query_database_result_counter"];for(const r of t)if(e=u.Tc.mapCounterToKeyInMode({mapCounterToKey:c},h,r),i.x.isSuccess(e)){b[n]=d({prefixMappingMode:r,baseHref:e.value});break}if(i.x.isFail(e))return{error:new s.XV("unmapped_id",e.error.message,e.error)}}else if((0,a.$K)(c)){const t=u.Tc.mapCounterToKeyInMode({mapCounterToKey:c},h,e.mappingMode);if(i.x.isFail(t))return{error:new s.XV("unmapped_id",t.error.message,t.error)};b[n]=t.value}}if(!0!==e.values&&!e.values.includes(h))return{error:new s.eL({attributeName:n,receivedValue:h,tagName:o})}}return{value:b}}function y(e,t){if(0===e.length)throw new Error("Must provide at least 1 label and type guard");const r=[...e],n=[[]];for(const a of t){const[t,o]=r[0];if(!o(a)){for(;r.length>0;){r.shift();const e=r[0];if(n.push([]),e&&e[1](a))break}if(0===r.length){var i;const r=null===(i=e.find((e=>{let[,t]=e;return t(a)})))||void 0===i?void 0:i[0];if(!r)throw new Error(`Item did not match any type guards: ${JSON.stringify(a)}`);return{error:{incorrectLabel:r,lastLabel:t}}}}n.at(-1).push(a)}for(;n.length<e.length;)n.push([]);return{value:n}}function b(e,t){return o.p.manyTill(o.p.choice([...t,o.p.fail((t=>new s.d4({tagName:e,unexpectedNode:n.Ps(t)})))]),o.p.eof())}function h(e){return e.children&&e.children.length>0?{error:new s.d4({tagName:e.tagName,unexpectedNode:e.children[0]})}:{value:void 0}}function g(e){const{tagName:t,attributeDefinitions:r,mapCounterToKey:n}=e;return o.p.mapResult(c(t),(e=>{const a=m({tagName:t,inputAttributes:e.attributes,definitions:r,mapCounterToKey:n});if(i.x.isFail(a))return a;const o=h(e);return i.x.isFail(o)?o:{value:{attributes:a.value}}}))}},80:(e,t,r)=>{r.d(t,{kU:()=>s,p:()=>p,w6:()=>o});r(21703),r(57658);var n=r(53965),i=r(40470);class a extends Error{constructor(e){super(e)}}function o(e,t){const r=Array.isArray(t)?t:[t],[,n]=e(r);return n.status?{value:n.value}:{error:n.error}}function s(e,t){const r=o(e,t);if(i.x.isFail(r))throw r.error;return r.value}const u=Symbol("ManyTillEndSentinel"),p={try:e=>t=>{const[r,n]=e(t);return n.status?[r,n]:[t,n]},any:()=>e=>e.length>0?[e.slice(1),{status:!0,value:e[0]}]:[[],{status:!1,error:new a("Reached end of input")}],eof:e=>t=>0===t.length?[[],{status:!0,value:void 0}]:[t,{status:!1,error:(null==e?void 0:e(t[0]))??new a("Expected end of input")}],map:(e,t)=>r=>{const[n,i]=e(r);return[n,i.status?{status:!0,value:t(i.value)}:i]},mapResult:(e,t)=>r=>{const[n,a]=p.map(e,t)(r);return a.status?i.x.isFail(a.value)?[n,{status:!1,error:a.value.error}]:[n,{status:!0,value:a.value.value}]:[n,a]},andThen:(e,t)=>r=>{const[n,i]=e(r);return i.status?t(i.value)(n):[n,i]},sequence:function(e){return t=>{const r=[];for(const n of e){const[e,i]=n(t);if(!i.status)return[e,i];r.push(i.value),t=e}return[t,{status:!0,value:r}]}},satisfy:function(e){return p.try((t=>{const[r,n]=p.any()(t);return n.status&&!e(n.value)?[r,{status:!1,error:new a("Failed predicate")}]:[r,n]}))},filter:function(e,t){return p.try((r=>{const[n,i]=e(r);return[n,i.status?t(i.value)?i:{status:!1,error:new a("Failed predicate")}:i]}))},literal:e=>p.describe(p.satisfy((t=>n.Xy(t,e))),(()=>new a(`Expected: ${JSON.stringify(e)}.`))),describe:(e,t)=>r=>{const[n,i]=e(r);return[n,i.status?i:{status:!1,error:t()}]},constant:e=>t=>[t,{status:!0,value:e}],choice:e=>0===e.length?p.fail((()=>new a("No parsers to choose from"))):t=>{let r=e[0](t);for(const i of e.slice(1)){const[e,a]=r;if(a.status||!n.Xy(e,t))return r;r=i(t)}return r},fail:e=>t=>[t,{status:!1,error:e(t)}],many:e=>t=>{const r=[];for(;;){const[n,i]=p.try(e)(t);if(!i.status)return[n,{status:!0,value:r}];r.push(i.value),t=n}},manyTill:(e,t)=>r=>{const n=[];for(;;){const[i,a]=p.choice([p.map(t,(()=>u)),p.try(e)])(r);if(!a.status)return[i,a];if(a.value===u)return[i,{status:!0,value:n}];n.push(a.value),r=i}},many1:e=>p.map(p.sequence([e,p.many(e)]),(e=>{let[t,r]=e;return[t,...r]})),sepBy:(e,t)=>p.choice([p.sepBy1(e,t),p.constant([])]),sepBy1:(e,t)=>p.andThen(e,(r=>p.map(p.many(p.map(p.sequence([t,e]),(e=>{let[,t]=e;return t}))),(e=>[r,...e])))),lazy:e=>p.andThen(p.constant(void 0),e),lookAhead:e=>t=>[t,e(t)[1]]}}}]);